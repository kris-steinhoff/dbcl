name: Linting

on: [push]

jobs:
  build:
    strategy:
      matrix:
        python-version: ["3.10"]
        poetry-version: ["1.3.2"]
        os: ["ubuntu-18.04"]
        linter-command:
          - poetry run pylint dbcl
          - poetry run black --check --diff .

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry ${{ matrix.poetry-version }}
        id: install-poetry
        run: |
          python -m pip install poetry==${{ matrix.poetry-version }}
          echo POETRY_VENV=$(poetry config virtualenvs.path) >> $GITHUB_OUTPUT
      - name: Cache the virtualenv
        id: cache-poetry-venv
        uses: actions/cache@v3
        with:
          path: ${{ steps.install-poetry.outputs.POETRY_VENV }}
          key: poetry-venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - if: ${{ steps.cache-poetry-venv.outputs.cache-hit != 'true' }}
        name: Install dependencies
        run: |
          poetry install
      - name: Analyzing the code with "${{ matrix.linter-command }}"
        run: |
          ${{ matrix.linter-command }}
